"use strict";var vows=require("vows"),assert=require("assert"),fs=require("fs"),sandbox=require("sandboxed-module");vows.describe("../../lib/streams/BaseRollingFileStream").addBatch({"when node version < 0.10.0":{topic:function(){var e=sandbox.load("../../lib/streams/BaseRollingFileStream",{globals:{process:{version:"0.8.11"}},requires:{"readable-stream":{Writable:function(){}}}});return e.required},"it should use readable-stream to maintain compatibility":function(e){assert.ok(e["readable-stream"]),assert.ok(!e.stream)}},"when node version > 0.10.0":{topic:function(){var e=sandbox.load("../../lib/streams/BaseRollingFileStream",{globals:{process:{version:"0.10.1"}},requires:{stream:{Writable:function(){}}}});return e.required},"it should use the core stream module":function(e){assert.ok(e.stream),assert.ok(!e["readable-stream"])}},"when no filename is passed":{topic:require("../../lib/streams/BaseRollingFileStream"),"it should throw an error":function(e){try{new e,assert.fail("should not get here")}catch(r){assert.ok(r)}}},"default behaviour":{topic:function(){var e=require("../../lib/streams/BaseRollingFileStream"),r=new e("basetest.log");return r},teardown:function(){try{fs.unlink("basetest.log")}catch(e){console.error("could not remove basetest.log",e)}},"it should not want to roll":function(e){assert.isFalse(e.shouldRoll())},"it should not roll":function(e){var r=!1;e.roll("basetest.log",function(){r=!0}),assert.isTrue(r)}}}).exportTo(module);
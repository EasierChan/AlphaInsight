"use strict";var vows=require("vows"),assert=require("assert"),sandbox=require("sandboxed-module"),fakeConsole={error:function(e,o,s){this.logged=[e,o,s]}},globals=function(e){return{process:{env:{NODE_DEBUG:e}},console:fakeConsole}};vows.describe("../lib/debug").addBatch({"when NODE_DEBUG is set to log4js":{topic:function(){var e=sandbox.require("../lib/debug",{globals:globals("log4js")});return fakeConsole.logged=[],e("cheese")("biscuits"),fakeConsole.logged},"it should log to console.error":function(e){assert.equal(e[0],"LOG4JS: (%s) %s"),assert.equal(e[1],"cheese"),assert.equal(e[2],"biscuits")}},"when NODE_DEBUG is set to not log4js":{topic:function(){var e=sandbox.require("../lib/debug",{globals:globals("other_module")});return fakeConsole.logged=[],e("cheese")("biscuits"),fakeConsole.logged},"it should not log to console.error":function(e){assert.equal(e.length,0)}},"when NODE_DEBUG is not set":{topic:function(){var e=sandbox.require("../lib/debug",{globals:globals(null)});return fakeConsole.logged=[],e("cheese")("biscuits"),fakeConsole.logged},"it should not log to console.error":function(e){assert.equal(e.length,0)}}}).exportTo(module);
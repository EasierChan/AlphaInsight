"use strict";var vows=require("vows"),assert=require("assert");vows.describe("log4js global loglevel").addBatch({"global loglevel":{topic:function(){var e=require("../lib/log4js");return e},"set global loglevel on creation":function(e){var l=e.getLogger("log1"),t="OFF";l.level.toString()==t&&(t="TRACE"),assert.notEqual(l.level.toString(),t),e.setGlobalLogLevel(t),assert.equal(l.level.toString(),t);var o=e.getLogger("log2");assert.equal(o.level.toString(),t)},"global change loglevel":function(e){var l=e.getLogger("log1"),t=e.getLogger("log2"),o="OFF";l.level.toString()==o&&(o="TRACE"),assert.notEqual(l.level.toString(),o),e.setGlobalLogLevel(o),assert.equal(l.level.toString(),o),assert.equal(t.level.toString(),o)},"override loglevel":function(e){var l=e.getLogger("log1"),t=e.getLogger("log2"),o="OFF";l.level.toString()==o&&(o="TRACE"),assert.notEqual(l.level.toString(),o);var r=l.level.toString();assert.equal(t.level.toString(),r),t.setLevel(o),assert.equal(l.level.toString(),r),assert.equal(t.level.toString(),o),assert.notEqual(r,o),t.removeLevel(),assert.equal(l.level.toString(),r),assert.equal(t.level.toString(),r)},"preload loglevel":function(e){var l=e.getLogger("log1"),t="OFF";l.level.toString()==t&&(t="TRACE"),assert.notEqual(l.level.toString(),t);var o=l.level.toString();e.getLogger("log2").setLevel(t),assert.equal(l.level.toString(),o);var r=e.getLogger("log2");assert.equal(r.level.toString(),t),assert.notEqual(o,t),r.removeLevel(),assert.equal(l.level.toString(),o),assert.equal(r.level.toString(),o)},"set level on all categories":function(e){var l=e.getLogger("log1"),t=e.getLogger("log2"),o={levels:{log1:"ERROR",log2:"WARN"}};e.configure(o),assert.equal("ERROR",l.level.toString()),assert.equal("WARN",t.level.toString()),l.removeLevel(),t.removeLevel();var r={levels:{"[all]":"DEBUG"}};e.configure(r),assert.equal("DEBUG",l.level.toString()),assert.equal("DEBUG",t.level.toString())}}})["export"](module);
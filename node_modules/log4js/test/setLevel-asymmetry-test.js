"use strict";var vows=require("vows"),assert=require("assert"),log4js=require("../lib/log4js"),logger=log4js.getLogger("test-setLevel-asymmetry"),showProgress=function(){},strLevels=["Trace","Debug","Info","Warn","Error","Fatal"],log4jsLevels=[];strLevels.forEach(function(e){log4jsLevels.push(log4js.levels.toLevel(e))});var levelTypes={string:strLevels,"log4js.levels.level":log4jsLevels},batch={setLevel:{}};showProgress("Populating batch object...");for(var type in levelTypes){var context="is called with a "+type,levelsToTest=levelTypes[type];showProgress("Setting up the vows context for "+context),batch.setLevel[context]={},levelsToTest.forEach(function(e){var s="of "+e,t=log4js.levels.toLevel(e.toString());showProgress("Setting up the vows sub-context for "+s),batch.setLevel[context][s]={topic:e};for(var l in levelTypes)levelTypes[l].forEach(function(o){var r=type,v=l,a=t.isLessThanOrEqualTo(o),n="isLevelEnabled("+o+") called with a "+l+" should return "+a;showProgress("Setting up the vows vow for "+n),batch.setLevel[context][s][n]=function(s){logger.setLevel(s),showProgress("*** Checking setLevel( "+e+" ) of type "+r+", and isLevelEnabled( "+o+" ) of type "+v+". Expecting: "+a),assert.equal(logger.isLevelEnabled(o),a,"Failed: calling setLevel( "+e+" ) with type "+type+", isLevelEnabled( "+o+" ) of type "+l+" did not return "+a)}})})}showProgress("Running tests..."),vows.describe("log4js setLevel asymmetry fix").addBatch(batch)["export"](module);
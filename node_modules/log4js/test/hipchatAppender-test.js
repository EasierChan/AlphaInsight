"use strict";function setupLogging(t,e){var o={},s=function(t,e){o.notifier=this,o.body=t[0],o.callback=t[1],o.level=e},i={make:function(t,e,o,i,a){return{room:t,token:e,from:o||"",host:i||"api.hipchat.com",notify:a||!1,setRoom:function(t){this.room=t},setFrom:function(t){this.from=t},setHost:function(t){this.host=t},setNotify:function(t){this.notify=t},info:function(){s.call(this,arguments,"info")},warning:function(){s.call(this,arguments,"warning")},failure:function(){s.call(this,arguments,"failure")},success:function(){s.call(this,arguments,"success")}}}},a=sandbox.require("../lib/appenders/hipchat",{requires:{"hipchat-notifier":i}});return log4js.clearAppenders(),log4js.addAppender(a.configure(e),t),{logger:log4js.getLogger(t),lastRequest:o}}var vows=require("vows"),assert=require("assert"),log4js=require("../lib/log4js"),sandbox=require("sandboxed-module");vows.describe("HipChat appender").addBatch({"when logging to HipChat v2 API":{topic:function(){var t=function(t,e,o){return"works"},e=setupLogging("myCategory",{type:"hipchat",hipchat_token:"User_Token_With_Notification_Privs",hipchat_room:"Room_ID_Or_Name",hipchat_from:"Log4js_Test",hipchat_notify:!0,hipchat_host:"hipchat.your-company.tld",hipchat_response_callback:t});return e.logger.warn("Log event #1"),e},"a request to hipchat_host should be sent":function(t){assert.equal(t.lastRequest.notifier.host,"hipchat.your-company.tld"),assert.equal(t.lastRequest.notifier.notify,!0),assert.equal(t.lastRequest.body,"Log event #1"),assert.equal(t.lastRequest.level,"warning")},"a custom callback to the HipChat response is supported":function(t){assert.equal(t.lastRequest.callback(),"works")}},"when missing options":{topic:function(){var t=setupLogging("myLogger",{type:"hipchat"});return t.logger.error("Log event #2"),t},"it sets some defaults":function(t){assert.equal(t.lastRequest.notifier.host,"api.hipchat.com"),assert.equal(t.lastRequest.notifier.notify,!1),assert.equal(t.lastRequest.body,"Log event #2"),assert.equal(t.lastRequest.level,"failure")}},"when basicLayout is provided":{topic:function(){var t=setupLogging("myLogger",{type:"hipchat",layout:log4js.layouts.basicLayout});return t.logger.debug("Log event #3"),t},"it should include the timestamp":function(t){assert.match(t.lastRequest.body,/^\[[^\]]+\] \[[^\]]+\].*Log event \#3$/),assert.equal(t.lastRequest.level,"info")}}})["export"](module);
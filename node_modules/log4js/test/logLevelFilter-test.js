"use strict";function remove(e){try{fs.unlinkSync(e)}catch(r){}}var vows=require("vows"),fs=require("fs"),assert=require("assert"),os=require("os"),EOL=require("os").EOL||"\n";vows.describe("log4js logLevelFilter").addBatch({appender:{topic:function(){var e,r=require("../lib/log4js"),t=[];return r.clearAppenders(),r.addAppender(require("../lib/appenders/logLevelFilter").appender("ERROR",void 0,function(e){t.push(e)}),"logLevelTest"),e=r.getLogger("logLevelTest"),e.debug("this should not trigger an event"),e.warn("neither should this"),e.error("this should, though"),e.fatal("so should this"),t},"should only pass log events greater than or equal to its own level":function(e){assert.equal(e.length,2),assert.equal(e[0].data[0],"this should, though"),assert.equal(e[1].data[0],"so should this")}},configure:{topic:function(){var e,r=require("../lib/log4js");remove(__dirname+"/logLevelFilter.log"),remove(__dirname+"/logLevelFilter-warnings.log"),remove(__dirname+"/logLevelFilter-debugs.log"),r.configure("test/with-logLevelFilter.json"),e=r.getLogger("tests"),e.debug("debug"),e.info("info"),e.error("error"),e.warn("warn"),e.debug("debug"),e.trace("trace"),setTimeout(this.callback,500)},"tmp-tests.log":{topic:function(){fs.readFile(__dirname+"/logLevelFilter.log","utf8",this.callback)},"should contain all log messages":function(e){var r=e.trim().split(EOL);assert.deepEqual(r,["debug","info","error","warn","debug","trace"])}},"tmp-tests-warnings.log":{topic:function(){fs.readFile(__dirname+"/logLevelFilter-warnings.log","utf8",this.callback)},"should contain only error and warning log messages":function(e){var r=e.trim().split(EOL);assert.deepEqual(r,["error","warn"])}},"tmp-tests-debugs.log":{topic:function(){fs.readFile(__dirname+"/logLevelFilter-debugs.log","utf8",this.callback)},"should contain only trace and debug log messages":function(e){var r=e.trim().split(EOL);assert.deepEqual(r,["debug","debug","trace"])}}}})["export"](module);
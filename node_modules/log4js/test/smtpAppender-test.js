"use strict";function setupLogging(e,t){var s=[],n={createTransport:function(e,t){return{config:t,sendMail:function(e,t){s.push(e),t(null,!0)},close:function(){}}}},o={layout:function(e,t){return this.type=e,this.config=t,log4js.layouts.messagePassThroughLayout},basicLayout:log4js.layouts.basicLayout,messagePassThroughLayout:log4js.layouts.messagePassThroughLayout},r={errors:[],error:function(e,t){this.errors.push({msg:e,value:t})}},a=function(){},i=sandbox.require("../lib/appenders/smtp",{requires:{nodemailer:n,"nodemailer-sendmail-transport":a,"nodemailer-smtp-transport":a,"../layouts":o},globals:{console:r}});return log4js.addAppender(i.configure(t),e),{logger:log4js.getLogger(e),mailer:n,layouts:o,console:r,results:s}}function checkMessages(e,t,s){for(var n=0;n<e.results.length;++n)assert.equal(e.results[n].from,t),assert.equal(e.results[n].to,"recipient@domain.com"),assert.equal(e.results[n].subject,s?s:"Log event #"+(n+1)),assert.ok(new RegExp(".+Log event #"+(n+1)+"\n$").test(e.results[n].text))}var vows=require("vows"),assert=require("assert"),log4js=require("../lib/log4js"),sandbox=require("sandboxed-module");log4js.clearAppenders(),vows.describe("log4js smtpAppender").addBatch({"minimal config":{topic:function(){var e=setupLogging("minimal config",{recipients:"recipient@domain.com",SMTP:{port:25,auth:{user:"user@domain.com"}}});return e.logger.info("Log event #1"),e},"there should be one message only":function(e){assert.equal(e.results.length,1)},"message should contain proper data":function(e){checkMessages(e)}},"fancy config":{topic:function(){var e=setupLogging("fancy config",{recipients:"recipient@domain.com",sender:"sender@domain.com",subject:"This is subject",SMTP:{port:25,auth:{user:"user@domain.com"}}});return e.logger.info("Log event #1"),e},"there should be one message only":function(e){assert.equal(e.results.length,1)},"message should contain proper data":function(e){checkMessages(e,"sender@domain.com","This is subject")}},"config with layout":{topic:function(){var e=setupLogging("config with layout",{layout:{type:"tester"}});return e},"should configure layout":function(e){assert.equal(e.layouts.type,"tester")}},"separate email for each event":{topic:function(){var e=this,t=setupLogging("separate email for each event",{recipients:"recipient@domain.com",SMTP:{port:25,auth:{user:"user@domain.com"}}});setTimeout(function(){t.logger.info("Log event #1")},0),setTimeout(function(){t.logger.info("Log event #2")},500),setTimeout(function(){t.logger.info("Log event #3")},1100),setTimeout(function(){e.callback(null,t)},3e3)},"there should be three messages":function(e){assert.equal(e.results.length,3)},"messages should contain proper data":function(e){checkMessages(e)}},"multiple events in one email":{topic:function(){var e=this,t=setupLogging("multiple events in one email",{recipients:"recipient@domain.com",sendInterval:1,SMTP:{port:25,auth:{user:"user@domain.com"}}});setTimeout(function(){t.logger.info("Log event #1")},0),setTimeout(function(){t.logger.info("Log event #2")},100),setTimeout(function(){t.logger.info("Log event #3")},1500),setTimeout(function(){e.callback(null,t)},3e3)},"there should be two messages":function(e){assert.equal(e.results.length,2)},"messages should contain proper data":function(e){assert.equal(e.results[0].to,"recipient@domain.com"),assert.equal(e.results[0].subject,"Log event #1"),assert.equal(e.results[0].text.match(new RegExp(".+Log event #[1-2]$","gm")).length,2),assert.equal(e.results[1].to,"recipient@domain.com"),assert.equal(e.results[1].subject,"Log event #3"),assert.ok(new RegExp(".+Log event #3\n$").test(e.results[1].text))}},"error when sending email":{topic:function(){var e=setupLogging("error when sending email",{recipients:"recipient@domain.com",sendInterval:0,SMTP:{port:25,auth:{user:"user@domain.com"}}});return e.mailer.createTransport=function(){return{sendMail:function(e,t){t({message:"oh noes"})},close:function(){}}},e.logger.info("This will break"),e.console},"should be logged to console":function(e){assert.equal(e.errors.length,1),assert.equal(e.errors[0].msg,"log4js.smtpAppender - Error happened"),assert.equal(e.errors[0].value.message,"oh noes")}},"transport full config":{topic:function(){var e=setupLogging("transport full config",{recipients:"recipient@domain.com",transport:{plugin:"sendmail",options:{path:"/usr/sbin/sendmail"}}});return e.logger.info("Log event #1"),e},"there should be one message only":function(e){assert.equal(e.results.length,1)},"message should contain proper data":function(e){checkMessages(e)}},"transport no-options config":{topic:function(){var e=setupLogging("transport no-options config",{recipients:"recipient@domain.com",transport:{plugin:"sendmail"}});return e.logger.info("Log event #1"),e},"there should be one message only":function(e){assert.equal(e.results.length,1)},"message should contain proper data":function(e){checkMessages(e)}},"transport no-plugin config":{topic:function(){var e=setupLogging("transport no-plugin config",{recipients:"recipient@domain.com",transport:{}});return e.logger.info("Log event #1"),e},"there should be one message only":function(e){assert.equal(e.results.length,1)},"message should contain proper data":function(e){checkMessages(e)}},"attachment config":{topic:function(){var e=setupLogging("attachment config",{recipients:"recipient@domain.com",attachment:{enable:!0},SMTP:{port:25,auth:{user:"user@domain.com"}}});return e.logger.info("Log event #1"),e},"message should contain proper data":function(e){assert.equal(e.results.length,1),assert.equal(e.results[0].attachments.length,1);var t=e.results[0].attachments[0];assert.equal(e.results[0].text,"See logs as attachment"),assert.equal(t.filename,"default.log"),assert.equal(t.contentType,"text/x-log"),assert.ok(new RegExp(".+Log event #1\n$").test(t.content))}}})["export"](module);
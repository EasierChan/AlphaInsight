"use strict";function getLoggerName(e){return e+"-logger"}function getTopLevelContext(e,o,t){return{topic:function(){var t=require("../lib/log4js");return strLevels.forEach(function(e){t.getLogger(getLoggerName(e)).setLevel(e)}),e?showProgress("** Not configuring log4js"):(showProgress("** Configuring log4js with",o),t.configure(o)),t}}}function checkForMismatch(e){var o=e.log4js.levels.toLevel(e.baseLevel).isLessThanOrEqualTo(e.log4js.levels.toLevel(e.comparisonLevel));assert.equal(o,e.expectedResult,"Mismatch: for setLevel("+e.baseLevel+") was expecting a comparison with "+e.comparisonLevel+" to be "+e.expectedResult)}function checkExpectedResult(e){var o=e.log4js.getLogger(getLoggerName(e.baseLevel)).isLevelEnabled(e.log4js.levels.toLevel(e.comparisonLevel));assert.equal(o,e.expectedResult,"Failed: "+getLoggerName(e.baseLevel)+".isLevelEnabled( "+e.comparisonLevel+" ) returned "+o)}function setupBaseLevelAndCompareToOtherLevels(e){var o="and checking the logger whose level was set to "+e,t={topic:e};batch[context][o]=t,strLevels.forEach(compareToOtherLevels(t))}function compareToOtherLevels(e){var o=e.topic;return function(t){var s="with isLevelEnabled("+t+")",l=strLevels.indexOf(o)<=strLevels.indexOf(t);e[s]={topic:function(e,o){return{comparisonLevel:t,baseLevel:e,log4js:o,expectedResult:l}}};var r="should return "+l;e[s][r]=checkExpectedResult;var n=e[s];n["finally checking for comparison mismatch with log4js"]=checkForMismatch}}var vows=require("vows"),assert=require("assert"),toLevel=require("../lib/levels").toLevel,showProgress=function(){},strLevels=["Trace","Debug","Info","Warn","Error","Fatal"],configs={nop:"nop","is undefined":void 0,"is null":null,"is empty":{},"has no levels":{foo:"bar"},"has null levels":{levels:null},"has empty levels":{levels:{}},"has random levels":{levels:{foo:"bar"}},"has some valid levels":{levels:{A:"INFO"}}},batches=[];showProgress("Populating batch object...");for(var cfg in configs){var configToTest=configs[cfg],nop="nop"===configToTest,context;context=nop?"Setting up loggers with initial levels, then NOT setting a configuration,":"Setting up loggers with initial levels, then setting a configuration which "+cfg+",",showProgress("Setting up the vows batch and context for "+context);var batch={};batch[context]=getTopLevelContext(nop,configToTest,context),batches.push(batch),strLevels.forEach(setupBaseLevelAndCompareToOtherLevels)}showProgress("Running tests");var v=vows.describe('log4js.configure(), with or without a "levels" property');batches.forEach(function(e){v=v.addBatch(e)}),v["export"](module);
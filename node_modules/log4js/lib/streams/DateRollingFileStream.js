"use strict";function findTimestampFromFileIfExists(e,t){return fs.existsSync(e)?fs.statSync(e).mtime:new Date(t())}function DateRollingFileStream(e,t,i,l){debug("Now is "+l),t&&"object"==typeof t&&(l=i,i=t,t=null),this.pattern=t||".yyyy-MM-dd",this.now=l||Date.now,this.lastTimeWeWroteSomething=format.asString(this.pattern,findTimestampFromFileIfExists(e,this.now)),this.baseFilename=e,this.alwaysIncludePattern=!1,i&&(i.alwaysIncludePattern&&(this.alwaysIncludePattern=!0,e=this.baseFilename+this.lastTimeWeWroteSomething),delete i.alwaysIncludePattern,0===Object.keys(i).length&&(i=null)),debug("this.now is "+this.now+", now is "+l),DateRollingFileStream.super_.call(this,e,i)}var BaseRollingFileStream=require("./BaseRollingFileStream"),debug=require("../debug")("DateRollingFileStream"),format=require("../date_format"),fs=require("fs"),util=require("util");module.exports=DateRollingFileStream,util.inherits(DateRollingFileStream,BaseRollingFileStream),DateRollingFileStream.prototype.shouldRoll=function(){var e=this.lastTimeWeWroteSomething,t=format.asString(this.pattern,new Date(this.now()));return debug("DateRollingFileStream.shouldRoll with now = "+this.now()+", thisTime = "+t+", lastTime = "+e),this.lastTimeWeWroteSomething=t,this.previousTime=e,t!==e},DateRollingFileStream.prototype.roll=function(e,t){function i(e){fs.unlink(n,function(t){e()})}function l(t){debug("Renaming the "+e+" -> "+n),fs.rename(e,n,t)}if(debug("Starting roll"),this.alwaysIncludePattern)this.filename=this.baseFilename+this.lastTimeWeWroteSomething,this.closeTheStream(this.openTheStream.bind(this,t));else{var n=this.baseFilename+this.previousTime;this.closeTheStream(i.bind(null,l.bind(null,this.openTheStream.bind(this,t))))}};
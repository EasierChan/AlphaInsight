"use strict";function BaseRollingFileStream(e,t){function i(e){var t=0;try{t=fs.statSync(e).size}catch(i){}return t}function r(){if(!e)throw new Error("You must specify a filename")}debug("In BaseRollingFileStream"),this.filename=e,this.options=t||{},this.options.encoding=this.options.encoding||"utf8",this.options.mode=this.options.mode||parseInt("0644",8),this.options.flags=this.options.flags||"a",this.currentSize=0,r(),debug("Calling BaseRollingFileStream.super"),BaseRollingFileStream.super_.call(this),this.openTheStream(),this.currentSize=i(this.filename)}var fs=require("fs"),stream,debug=require("../debug")("BaseRollingFileStream"),util=require("util"),semver=require("semver");stream=semver.satisfies(process.version,">=0.10.0")?require("stream"):require("readable-stream"),module.exports=BaseRollingFileStream,util.inherits(BaseRollingFileStream,stream.Writable),BaseRollingFileStream.prototype._write=function(e,t,i){function r(){debug("writing the chunk to the underlying stream"),s.currentSize+=e.length;try{s.theStream.write(e,t,i)}catch(r){debug(r),i()}}var s=this;debug("in _write"),this.shouldRoll()?(this.currentSize=0,this.roll(this.filename,r)):r()},BaseRollingFileStream.prototype.openTheStream=function(e){debug("opening the underlying stream"),this.theStream=fs.createWriteStream(this.filename,this.options),e&&this.theStream.on("open",e)},BaseRollingFileStream.prototype.closeTheStream=function(e){debug("closing the underlying stream"),this.theStream.end(e)},BaseRollingFileStream.prototype.shouldRoll=function(){return!1},BaseRollingFileStream.prototype.roll=function(e,t){t()};